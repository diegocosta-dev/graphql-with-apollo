[{"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\index.tsx":"1","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\reportWebVitals.ts":"2","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\NavBar.tsx":"3","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\ListUsers.tsx":"4","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Ursers.tsx":"5","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Pagination.tsx":"6","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\routes.tsx":"7","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\ListCompanies.tsx":"8","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Companies.tsx":"9","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\Title.tsx":"10","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\Container.tsx":"11","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\Table.tsx":"12","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\CreateButton.tsx":"13","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\SmButton.tsx":"14","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\TD.tsx":"15","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\Navs.tsx":"16","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\Paginate.tsx":"17","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\From.tsx":"18","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\pages\\Companies.tsx":"19","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\pages\\NewCompany.tsx":"20","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\pages\\Users.tsx":"21","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\pages\\NewUser.tsx":"22","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\pages\\UpdateUser.tsx":"23","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\gql.ts":"24","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\Msgs.tsx":"25"},{"size":710,"mtime":1607099592022,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1606918150833,"results":"28","hashOfConfig":"27"},{"size":569,"mtime":1607027311555,"results":"29","hashOfConfig":"27"},{"size":741,"mtime":1607101861465,"results":"30","hashOfConfig":"27"},{"size":1009,"mtime":1607088882346,"results":"31","hashOfConfig":"27"},{"size":1613,"mtime":1607024811410,"results":"32","hashOfConfig":"27"},{"size":704,"mtime":1607092624150,"results":"33","hashOfConfig":"27"},{"size":764,"mtime":1607101841240,"results":"34","hashOfConfig":"27"},{"size":843,"mtime":1607029278442,"results":"35","hashOfConfig":"27"},{"size":390,"mtime":1607021774433,"results":"36","hashOfConfig":"27"},{"size":169,"mtime":1607021643902,"results":"37","hashOfConfig":"27"},{"size":451,"mtime":1607021693181,"results":"38","hashOfConfig":"27"},{"size":455,"mtime":1607021735865,"results":"39","hashOfConfig":"27"},{"size":583,"mtime":1607047493760,"results":"40","hashOfConfig":"27"},{"size":155,"mtime":1607101845216,"results":"41","hashOfConfig":"27"},{"size":634,"mtime":1607028357988,"results":"42","hashOfConfig":"27"},{"size":1431,"mtime":1607093008233,"results":"43","hashOfConfig":"27"},{"size":878,"mtime":1607026724752,"results":"44","hashOfConfig":"27"},{"size":2022,"mtime":1607294585652,"results":"45","hashOfConfig":"27"},{"size":1913,"mtime":1607348772823,"results":"46","hashOfConfig":"27"},{"size":1880,"mtime":1607275927574,"results":"47","hashOfConfig":"27"},{"size":2739,"mtime":1607352109857,"results":"48","hashOfConfig":"27"},{"size":1814,"mtime":1607092625277,"results":"49","hashOfConfig":"27"},{"size":1234,"mtime":1607350005776,"results":"50","hashOfConfig":"27"},{"size":507,"mtime":1607294335146,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1foguk2",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\index.tsx",[],["105","106"],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\reportWebVitals.ts",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\NavBar.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\ListUsers.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Ursers.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Pagination.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\routes.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\ListCompanies.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Companies.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\Title.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\Container.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\Table.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\CreateButton.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\SmButton.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\TD.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\Navs.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\Paginate.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\From.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\pages\\Companies.tsx",["107"],"import React, { useState } from 'react';\nimport NaveBar from '../components/NavBar';\nimport Container from '../components/Utils/Container';\nimport Title from '../components/Utils/Title';\nimport ListCompanies from '../components/ListCompanies';\nimport Pagination from '../components/Pagination';\nimport CreateButton from '../components/Utils/CreateButton';\nimport { useQuery } from '@apollo/client';\nimport { GET_COMPANIES } from '../gql';\n\nfunction Companies() {\n  const [page, setPage] = useState<number>(1);\n  const [limit, setLimit] = useState<number>(7);\n  const [companies, setCompanies] = useState<any>([]);\n  const [filterByID, setFilterByNumber] = useState<boolean>(true);\n\n  const { data, loading } = useQuery(GET_COMPANIES, {\n    variables: { pagination: { page, limit } },\n  });\n\n  function changePage(page: number) {\n    setPage(page);\n  }\n\n  function filterId(event: any) {\n    event.preventDefault();\n    const listOfCompanies = companies;\n\n    if (filterByID) {\n      listOfCompanies.sort((ID: number, ID2: number) => (ID > ID2 ? 1 : -1));\n      setCompanies(listOfCompanies);\n      setFilterByNumber(false);\n      return;\n    }\n\n    listOfCompanies.sort((ID: number, ID2: number) => (ID < ID2 ? 1 : -1));\n    setCompanies(listOfCompanies);\n    setFilterByNumber(true);\n    return;\n  }\n\n  return (\n    <div>\n      <NaveBar>\n        <div>Desh Board</div>\n      </NaveBar>\n      <Container>\n        <Title>Companies</Title>\n        <CreateButton href=\"/newcompany\" style={{ textAlign: 'right' }}>\n          New Company\n        </CreateButton>\n        {loading && <p>Loading...</p>}\n        {data && data.companies && (\n          <>\n            <ListCompanies filter={filterId} companies={data.companies.data} />\n            <Pagination\n              totalItems={data.companies.pagination.totalItems}\n              itemsPerPage={limit}\n              actualPage={page}\n              changePage={changePage}\n            />\n          </>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default Companies;\n","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\pages\\NewCompany.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\pages\\Users.tsx",["108"],"import React, { useState } from 'react';\nimport NaveBar from '../components/NavBar';\nimport Container from '../components/Utils/Container';\nimport Title from '../components/Utils/Title';\nimport ListUsers from '../components/ListUsers';\nimport Pagination from '../components/Pagination';\nimport CreateButton from '../components/Utils/CreateButton';\nimport { useQuery } from '@apollo/client';\nimport { GET_USERS } from '../gql';\n\nfunction Users() {\n  const [page, setPage] = useState<number>(1);\n  const [limit, setLimit] = useState<number>(7);\n  const [users, setUsers] = useState<any>([]);\n  const [filterByID, setFilterByNumber] = useState<boolean>(true);\n\n  const { data, loading } = useQuery(GET_USERS, {\n    variables: { pagination: { page, limit } },\n  });\n\n  function changePage(page: number) {\n    setPage(page);\n  }\n\n  function filterId(event: any) {\n    event.preventDefault();\n    const listOfUsers = users;\n\n    if (filterByID) {\n      listOfUsers.sort((ID: number, ID2: number) => (ID > ID2 ? 1 : -1));\n      setUsers(listOfUsers);\n      setFilterByNumber(false);\n      return;\n    }\n\n    listOfUsers.sort((ID: number, ID2: number) => (ID < ID2 ? 1 : -1));\n    setUsers(listOfUsers);\n    setFilterByNumber(true);\n    return;\n  }\n\n  return (\n    <div>\n      <NaveBar />\n      <Container>\n        <Title>Users</Title>\n        <CreateButton href=\"/newuser\" style={{ textAlign: 'right' }}>\n          New User\n        </CreateButton>\n        {loading && <p>Loading</p>}\n        {data && data.users && (\n          <>\n            <ListUsers filter={filterId} users={data.users.data} />\n            <Pagination\n              totalItems={data.users.pagination.totalItems}\n              itemsPerPage={limit}\n              actualPage={page}\n              changePage={changePage}\n            />\n          </>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default Users;\n","D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\pages\\NewUser.tsx",["109"],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\pages\\UpdateUser.tsx",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\gql.ts",[],"D:\\GraphQL\\fontEnd\\graphql-with-apollo\\src\\components\\Utils\\Msgs.tsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":13,"column":17,"nodeType":"116","messageId":"117","endLine":13,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":13,"column":17,"nodeType":"116","messageId":"117","endLine":13,"endColumn":25},{"ruleId":"114","severity":1,"message":"118","line":5,"column":17,"nodeType":"116","messageId":"117","endLine":5,"endColumn":23},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"@typescript-eslint/no-unused-vars","'setLimit' is assigned a value but never used.","Identifier","unusedVar","'Select' is defined but never used.","no-global-assign","no-unsafe-negation"]